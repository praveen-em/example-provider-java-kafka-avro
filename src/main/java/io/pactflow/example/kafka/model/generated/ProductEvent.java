/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.pactflow.example.kafka.model.generated;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ProductEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8383798994315533940L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ProductEvent\",\"namespace\":\"io.pactflow.example.kafka.model.generated\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"event\",\"type\":{\"type\":\"enum\",\"name\":\"EventType\",\"symbols\":[\"CREATED\",\"UPDATED\",\"DELETED\",\"UNKNOWN\"]},\"default\":\"UNKNOWN\"},{\"name\":\"createdOn\",\"type\":[\"null\",{\"type\":\"int\",\"logicalType\":\"date\"}],\"default\":null},{\"name\":\"price\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":6,\"scale\":2}],\"default\":null},{\"name\":\"available\",\"type\":\"boolean\",\"default\":false},{\"name\":\"location\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Address\",\"fields\":[{\"name\":\"doorNumber\",\"type\":\"int\"},{\"name\":\"street\",\"type\":\"string\"},{\"name\":\"postcode\",\"type\":\"string\"}]}],\"default\":null},{\"name\":\"relatedItems\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null},{\"name\":\"otherInfo\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<ProductEvent> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ProductEvent> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ProductEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ProductEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ProductEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ProductEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ProductEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ProductEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ProductEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence id;
  private java.lang.CharSequence name;
  private java.lang.CharSequence type;
  private java.lang.CharSequence version;
  private io.pactflow.example.kafka.model.generated.EventType event;
  private java.time.LocalDate createdOn;
  private java.nio.ByteBuffer price;
  private boolean available;
  private io.pactflow.example.kafka.model.generated.Address location;
  private java.util.List<java.lang.CharSequence> relatedItems;
  private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> otherInfo;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ProductEvent() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param name The new value for name
   * @param type The new value for type
   * @param version The new value for version
   * @param event The new value for event
   * @param createdOn The new value for createdOn
   * @param price The new value for price
   * @param available The new value for available
   * @param location The new value for location
   * @param relatedItems The new value for relatedItems
   * @param otherInfo The new value for otherInfo
   */
  public ProductEvent(java.lang.CharSequence id, java.lang.CharSequence name, java.lang.CharSequence type, java.lang.CharSequence version, io.pactflow.example.kafka.model.generated.EventType event, java.time.LocalDate createdOn, java.nio.ByteBuffer price, java.lang.Boolean available, io.pactflow.example.kafka.model.generated.Address location, java.util.List<java.lang.CharSequence> relatedItems, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> otherInfo) {
    this.id = id;
    this.name = name;
    this.type = type;
    this.version = version;
    this.event = event;
    this.createdOn = createdOn;
    this.price = price;
    this.available = available;
    this.location = location;
    this.relatedItems = relatedItems;
    this.otherInfo = otherInfo;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return type;
    case 3: return version;
    case 4: return event;
    case 5: return createdOn;
    case 6: return price;
    case 7: return available;
    case 8: return location;
    case 9: return relatedItems;
    case 10: return otherInfo;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: name = (java.lang.CharSequence)value$; break;
    case 2: type = (java.lang.CharSequence)value$; break;
    case 3: version = (java.lang.CharSequence)value$; break;
    case 4: event = (io.pactflow.example.kafka.model.generated.EventType)value$; break;
    case 5: createdOn = (java.time.LocalDate)value$; break;
    case 6: price = (java.nio.ByteBuffer)value$; break;
    case 7: available = (java.lang.Boolean)value$; break;
    case 8: location = (io.pactflow.example.kafka.model.generated.Address)value$; break;
    case 9: relatedItems = (java.util.List<java.lang.CharSequence>)value$; break;
    case 10: otherInfo = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.CharSequence getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'version' field.
   * @return The value of the 'version' field.
   */
  public java.lang.CharSequence getVersion() {
    return version;
  }


  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(java.lang.CharSequence value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'event' field.
   * @return The value of the 'event' field.
   */
  public io.pactflow.example.kafka.model.generated.EventType getEvent() {
    return event;
  }


  /**
   * Sets the value of the 'event' field.
   * @param value the value to set.
   */
  public void setEvent(io.pactflow.example.kafka.model.generated.EventType value) {
    this.event = value;
  }

  /**
   * Gets the value of the 'createdOn' field.
   * @return The value of the 'createdOn' field.
   */
  public java.time.LocalDate getCreatedOn() {
    return createdOn;
  }


  /**
   * Sets the value of the 'createdOn' field.
   * @param value the value to set.
   */
  public void setCreatedOn(java.time.LocalDate value) {
    this.createdOn = value;
  }

  /**
   * Gets the value of the 'price' field.
   * @return The value of the 'price' field.
   */
  public java.nio.ByteBuffer getPrice() {
    return price;
  }


  /**
   * Sets the value of the 'price' field.
   * @param value the value to set.
   */
  public void setPrice(java.nio.ByteBuffer value) {
    this.price = value;
  }

  /**
   * Gets the value of the 'available' field.
   * @return The value of the 'available' field.
   */
  public boolean getAvailable() {
    return available;
  }


  /**
   * Sets the value of the 'available' field.
   * @param value the value to set.
   */
  public void setAvailable(boolean value) {
    this.available = value;
  }

  /**
   * Gets the value of the 'location' field.
   * @return The value of the 'location' field.
   */
  public io.pactflow.example.kafka.model.generated.Address getLocation() {
    return location;
  }


  /**
   * Sets the value of the 'location' field.
   * @param value the value to set.
   */
  public void setLocation(io.pactflow.example.kafka.model.generated.Address value) {
    this.location = value;
  }

  /**
   * Gets the value of the 'relatedItems' field.
   * @return The value of the 'relatedItems' field.
   */
  public java.util.List<java.lang.CharSequence> getRelatedItems() {
    return relatedItems;
  }


  /**
   * Sets the value of the 'relatedItems' field.
   * @param value the value to set.
   */
  public void setRelatedItems(java.util.List<java.lang.CharSequence> value) {
    this.relatedItems = value;
  }

  /**
   * Gets the value of the 'otherInfo' field.
   * @return The value of the 'otherInfo' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getOtherInfo() {
    return otherInfo;
  }


  /**
   * Sets the value of the 'otherInfo' field.
   * @param value the value to set.
   */
  public void setOtherInfo(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.otherInfo = value;
  }

  /**
   * Creates a new ProductEvent RecordBuilder.
   * @return A new ProductEvent RecordBuilder
   */
  public static io.pactflow.example.kafka.model.generated.ProductEvent.Builder newBuilder() {
    return new io.pactflow.example.kafka.model.generated.ProductEvent.Builder();
  }

  /**
   * Creates a new ProductEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ProductEvent RecordBuilder
   */
  public static io.pactflow.example.kafka.model.generated.ProductEvent.Builder newBuilder(io.pactflow.example.kafka.model.generated.ProductEvent.Builder other) {
    if (other == null) {
      return new io.pactflow.example.kafka.model.generated.ProductEvent.Builder();
    } else {
      return new io.pactflow.example.kafka.model.generated.ProductEvent.Builder(other);
    }
  }

  /**
   * Creates a new ProductEvent RecordBuilder by copying an existing ProductEvent instance.
   * @param other The existing instance to copy.
   * @return A new ProductEvent RecordBuilder
   */
  public static io.pactflow.example.kafka.model.generated.ProductEvent.Builder newBuilder(io.pactflow.example.kafka.model.generated.ProductEvent other) {
    if (other == null) {
      return new io.pactflow.example.kafka.model.generated.ProductEvent.Builder();
    } else {
      return new io.pactflow.example.kafka.model.generated.ProductEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for ProductEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ProductEvent>
    implements org.apache.avro.data.RecordBuilder<ProductEvent> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence name;
    private java.lang.CharSequence type;
    private java.lang.CharSequence version;
    private io.pactflow.example.kafka.model.generated.EventType event;
    private java.time.LocalDate createdOn;
    private java.nio.ByteBuffer price;
    private boolean available;
    private io.pactflow.example.kafka.model.generated.Address location;
    private io.pactflow.example.kafka.model.generated.Address.Builder locationBuilder;
    private java.util.List<java.lang.CharSequence> relatedItems;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> otherInfo;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.pactflow.example.kafka.model.generated.ProductEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.version)) {
        this.version = data().deepCopy(fields()[3].schema(), other.version);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.event)) {
        this.event = data().deepCopy(fields()[4].schema(), other.event);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.createdOn)) {
        this.createdOn = data().deepCopy(fields()[5].schema(), other.createdOn);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.price)) {
        this.price = data().deepCopy(fields()[6].schema(), other.price);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.available)) {
        this.available = data().deepCopy(fields()[7].schema(), other.available);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.location)) {
        this.location = data().deepCopy(fields()[8].schema(), other.location);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (other.hasLocationBuilder()) {
        this.locationBuilder = io.pactflow.example.kafka.model.generated.Address.newBuilder(other.getLocationBuilder());
      }
      if (isValidValue(fields()[9], other.relatedItems)) {
        this.relatedItems = data().deepCopy(fields()[9].schema(), other.relatedItems);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.otherInfo)) {
        this.otherInfo = data().deepCopy(fields()[10].schema(), other.otherInfo);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
    }

    /**
     * Creates a Builder by copying an existing ProductEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(io.pactflow.example.kafka.model.generated.ProductEvent other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.version)) {
        this.version = data().deepCopy(fields()[3].schema(), other.version);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.event)) {
        this.event = data().deepCopy(fields()[4].schema(), other.event);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.createdOn)) {
        this.createdOn = data().deepCopy(fields()[5].schema(), other.createdOn);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.price)) {
        this.price = data().deepCopy(fields()[6].schema(), other.price);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.available)) {
        this.available = data().deepCopy(fields()[7].schema(), other.available);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.location)) {
        this.location = data().deepCopy(fields()[8].schema(), other.location);
        fieldSetFlags()[8] = true;
      }
      this.locationBuilder = null;
      if (isValidValue(fields()[9], other.relatedItems)) {
        this.relatedItems = data().deepCopy(fields()[9].schema(), other.relatedItems);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.otherInfo)) {
        this.otherInfo = data().deepCopy(fields()[10].schema(), other.otherInfo);
        fieldSetFlags()[10] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.CharSequence getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder setType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.type = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder clearType() {
      type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'version' field.
      * @return The value.
      */
    public java.lang.CharSequence getVersion() {
      return version;
    }


    /**
      * Sets the value of the 'version' field.
      * @param value The value of 'version'.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder setVersion(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.version = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'version' field has been set.
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'version' field.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder clearVersion() {
      version = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'event' field.
      * @return The value.
      */
    public io.pactflow.example.kafka.model.generated.EventType getEvent() {
      return event;
    }


    /**
      * Sets the value of the 'event' field.
      * @param value The value of 'event'.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder setEvent(io.pactflow.example.kafka.model.generated.EventType value) {
      validate(fields()[4], value);
      this.event = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'event' field has been set.
      * @return True if the 'event' field has been set, false otherwise.
      */
    public boolean hasEvent() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'event' field.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder clearEvent() {
      event = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdOn' field.
      * @return The value.
      */
    public java.time.LocalDate getCreatedOn() {
      return createdOn;
    }


    /**
      * Sets the value of the 'createdOn' field.
      * @param value The value of 'createdOn'.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder setCreatedOn(java.time.LocalDate value) {
      validate(fields()[5], value);
      this.createdOn = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'createdOn' field has been set.
      * @return True if the 'createdOn' field has been set, false otherwise.
      */
    public boolean hasCreatedOn() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'createdOn' field.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder clearCreatedOn() {
      createdOn = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'price' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getPrice() {
      return price;
    }


    /**
      * Sets the value of the 'price' field.
      * @param value The value of 'price'.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder setPrice(java.nio.ByteBuffer value) {
      validate(fields()[6], value);
      this.price = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'price' field has been set.
      * @return True if the 'price' field has been set, false otherwise.
      */
    public boolean hasPrice() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'price' field.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder clearPrice() {
      price = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'available' field.
      * @return The value.
      */
    public boolean getAvailable() {
      return available;
    }


    /**
      * Sets the value of the 'available' field.
      * @param value The value of 'available'.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder setAvailable(boolean value) {
      validate(fields()[7], value);
      this.available = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'available' field has been set.
      * @return True if the 'available' field has been set, false otherwise.
      */
    public boolean hasAvailable() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'available' field.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder clearAvailable() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'location' field.
      * @return The value.
      */
    public io.pactflow.example.kafka.model.generated.Address getLocation() {
      return location;
    }


    /**
      * Sets the value of the 'location' field.
      * @param value The value of 'location'.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder setLocation(io.pactflow.example.kafka.model.generated.Address value) {
      validate(fields()[8], value);
      this.locationBuilder = null;
      this.location = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'location' field has been set.
      * @return True if the 'location' field has been set, false otherwise.
      */
    public boolean hasLocation() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'location' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.pactflow.example.kafka.model.generated.Address.Builder getLocationBuilder() {
      if (locationBuilder == null) {
        if (hasLocation()) {
          setLocationBuilder(io.pactflow.example.kafka.model.generated.Address.newBuilder(location));
        } else {
          setLocationBuilder(io.pactflow.example.kafka.model.generated.Address.newBuilder());
        }
      }
      return locationBuilder;
    }

    /**
     * Sets the Builder instance for the 'location' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder setLocationBuilder(io.pactflow.example.kafka.model.generated.Address.Builder value) {
      clearLocation();
      locationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'location' field has an active Builder instance
     * @return True if the 'location' field has an active Builder instance
     */
    public boolean hasLocationBuilder() {
      return locationBuilder != null;
    }

    /**
      * Clears the value of the 'location' field.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder clearLocation() {
      location = null;
      locationBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'relatedItems' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getRelatedItems() {
      return relatedItems;
    }


    /**
      * Sets the value of the 'relatedItems' field.
      * @param value The value of 'relatedItems'.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder setRelatedItems(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[9], value);
      this.relatedItems = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'relatedItems' field has been set.
      * @return True if the 'relatedItems' field has been set, false otherwise.
      */
    public boolean hasRelatedItems() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'relatedItems' field.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder clearRelatedItems() {
      relatedItems = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'otherInfo' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getOtherInfo() {
      return otherInfo;
    }


    /**
      * Sets the value of the 'otherInfo' field.
      * @param value The value of 'otherInfo'.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder setOtherInfo(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[10], value);
      this.otherInfo = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'otherInfo' field has been set.
      * @return True if the 'otherInfo' field has been set, false otherwise.
      */
    public boolean hasOtherInfo() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'otherInfo' field.
      * @return This builder.
      */
    public io.pactflow.example.kafka.model.generated.ProductEvent.Builder clearOtherInfo() {
      otherInfo = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ProductEvent build() {
      try {
        ProductEvent record = new ProductEvent();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.type = fieldSetFlags()[2] ? this.type : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.version = fieldSetFlags()[3] ? this.version : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.event = fieldSetFlags()[4] ? this.event : (io.pactflow.example.kafka.model.generated.EventType) defaultValue(fields()[4]);
        record.createdOn = fieldSetFlags()[5] ? this.createdOn : (java.time.LocalDate) defaultValue(fields()[5]);
        record.price = fieldSetFlags()[6] ? this.price : (java.nio.ByteBuffer) defaultValue(fields()[6]);
        record.available = fieldSetFlags()[7] ? this.available : (java.lang.Boolean) defaultValue(fields()[7]);
        if (locationBuilder != null) {
          try {
            record.location = this.locationBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("location"));
            throw e;
          }
        } else {
          record.location = fieldSetFlags()[8] ? this.location : (io.pactflow.example.kafka.model.generated.Address) defaultValue(fields()[8]);
        }
        record.relatedItems = fieldSetFlags()[9] ? this.relatedItems : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[9]);
        record.otherInfo = fieldSetFlags()[10] ? this.otherInfo : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[10]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ProductEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<ProductEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ProductEvent>
    READER$ = (org.apache.avro.io.DatumReader<ProductEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










